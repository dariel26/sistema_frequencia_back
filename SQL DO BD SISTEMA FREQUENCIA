CREATE TABLE Usuario (
id_usuario BIGINT PRIMARY KEY AUTO_INCREMENT,
papeis JSON,
papel_atual TEXT,
nome TEXT, 
login VARCHAR(200) UNIQUE,
senha TEXT,
tipo TEXT
);

CREATE TABLE Grupo (
id_grupo BIGINT PRIMARY KEY AUTO_INCREMENT,
nome VARCHAR(200) UNIQUE
);

CREATE TABLE Estagio (
id_estagio BIGINT PRIMARY KEY AUTO_INCREMENT,
nome VARCHAR(200) UNIQUE
);

CREATE TABLE Local (
id_local BIGINT PRIMARY KEY AUTO_INCREMENT,
nome VARCHAR(200) UNIQUE,
coordenadas JSON
);

CREATE TABLE CoordEstagio (
id_usuario BIGINT,
id_estagio BIGINT UNIQUE,
FOREIGN KEY(id_usuario) REFERENCES Usuario (id_usuario) ON DELETE CASCADE,
FOREIGN KEY(id_estagio) REFERENCES Estagio (id_estagio) ON DELETE CASCADE
);

CREATE TABLE AlunoGrupo (
id_usuario BIGINT UNIQUE,
id_grupo BIGINT,
FOREIGN KEY(id_usuario) REFERENCES Usuario (id_usuario) ON DELETE CASCADE,
FOREIGN KEY(id_grupo) REFERENCES Grupo (id_grupo) ON DELETE CASCADE
);

CREATE TABLE EstagioGrupo (
id_estagiogrupo BIGINT PRIMARY KEY AUTO_INCREMENT,
data_inicial DATE,
data_final DATE,
id_grupo BIGINT NULL,
id_estagio BIGINT,
FOREIGN KEY(id_grupo) REFERENCES Grupo (id_grupo) ON DELETE CASCADE,
FOREIGN KEY(id_estagio) REFERENCES Estagio (id_estagio) ON DELETE CASCADE,
UNIQUE(id_estagio, id_grupo),
UNIQUE(id_estagio, data_inicial),
UNIQUE(id_estagio, data_final)
);

CREATE TABLE Atividade(
id_atividade BIGINT PRIMARY KEY AUTO_INCREMENT,
id_estagio BIGINT,
nome VARCHAR(200),
hora_inicial TEXT,
hora_final TEXT,
intervalo_alunos TEXT,
alunos_no_dia INT,
segunda BOOLEAN,
terca BOOLEAN,
quarta BOOLEAN,
quinta BOOLEAN,
sexta BOOLEAN,
sabado BOOLEAN,
domingo BOOLEAN,
FOREIGN KEY(id_estagio) REFERENCES Estagio (id_estagio) ON DELETE CASCADE,
UNIQUE (id_estagio, nome)
);

CREATE TABLE PrecAtividade (
id_usuario BIGINT,
id_atividade BIGINT UNIQUE,
FOREIGN KEY(id_usuario) REFERENCES Usuario (id_usuario) ON DELETE CASCADE,
FOREIGN KEY(id_atividade) REFERENCES Atividade (id_atividade) ON DELETE CASCADE
);

CREATE TABLE LocalAtividade (
id_local BIGINT,
id_atividade BIGINT UNIQUE,
FOREIGN KEY(id_local) REFERENCES Local (id_local) ON DELETE CASCADE,
FOREIGN KEY(id_atividade) REFERENCES Atividade (id_atividade) ON DELETE CASCADE
);

CREATE TABLE DataAtividade (
id_dataatividade BIGINT PRIMARY KEY AUTO_INCREMENT,
id_atividade BIGINT,
data DATE,
excluida BOOLEAN,
FOREIGN KEY(id_atividade) REFERENCES Atividade (id_atividade) ON DELETE CASCADE,
UNIQUE(id_atividade, data)
);

CREATE TABLE AlunoDataAtividade (
id_alunodataatividade BIGINT PRIMARY KEY AUTO_INCREMENT,
data DATE,
id_usuario BIGINT,
id_atividade BIGINT,
estado TEXT,
FOREIGN KEY(id_usuario) REFERENCES Usuario (id_usuario) ON DELETE CASCADE,
FOREIGN KEY(id_atividade) REFERENCES Atividade (id_atividade) ON DELETE CASCADE
);

CREATE TABLE jwt (
id_token BIGINT PRIMARY KEY AUTO_INCREMENT,
token text,
validade DATETIME
);

CREATE VIEW view_aluno AS SELECT
    al.id_usuario,
    al.nome,
    al.papeis,
    al.papel_atual,
    al.login as matricula,
    g.id_grupo,
    g.nome AS nome_grupo,
    COALESCE((SELECT JSON_ARRAYAGG(
            JSON_OBJECT(
                'nome_estagio', e.nome,
                'data_inicial', eg.data_inicial,
                'data_final', eg.data_final
            )
        )
        FROM EstagioGrupo AS eg
        LEFT JOIN Estagio AS e ON e.id_estagio = eg.id_estagio
        WHERE eg.id_grupo = g.id_grupo), JSON_ARRAY()
    ) AS estagios,
    COALESCE((SELECT JSON_ARRAYAGG(
            JSON_OBJECT(
                'id_atividade', at.id_atividade,
                'nome_atividade', at.nome,
                'hora_inicial', at.hora_inicial,
                'hora_final', at.hora_final,
                'data', ada.data,
                'estado', ada.estado,
                'id_alunodataatividade', ada.id_alunodataatividade,
                'excluida', da.excluida
            )
        )
        FROM AlunoDataAtividade AS ada
        LEFT JOIN Atividade AS at ON at.id_atividade = ada.id_atividade
        LEFT JOIN DataAtividade AS da ON da.id_atividade=at.id_atividade AND da.data = ada.data
        WHERE ada.id_usuario = al.id_usuario
    ), JSON_ARRAY()) AS datas
FROM Usuario AS al
LEFT JOIN AlunoGrupo AS ag ON ag.id_usuario = al.id_usuario
LEFT JOIN Grupo AS g ON g.id_grupo = ag.id_grupo
WHERE al.tipo="ALUNO"
GROUP BY al.id_usuario;

CREATE VIEW view_atividade AS SELECT
    a.id_atividade,
    a.nome AS nome_atividade,
    a.id_estagio,
    a.hora_inicial,
    a.hora_final,
    a.intervalo_alunos,
    a.alunos_no_dia,
    p.nome AS nome_preceptor,
    l.nome AS nome_local,
    a.segunda,
    a.terca,
    a.quarta,
    a.quinta,
    a.sexta, 
    a.sabado,
    a.domingo,
    COALESCE((
        SELECT JSON_ARRAYAGG(
            JSON_OBJECT(
                'data', da.data,
                'excluida', da.excluida,
                'id_dataatividade', da.id_dataatividade,
                'alunos', COALESCE((
                    SELECT JSON_ARRAYAGG(
						JSON_OBJECT(
							'nome', al.nome,
							'id_aluno', al.id_usuario,
                            'estado', ada.estado
						)
                    )
                    FROM AlunoDataAtividade AS ada 
                    LEFT JOIN Usuario AS al ON al.id_usuario = ada.id_usuario
                    WHERE ada.data = da.data AND ada.id_atividade = a.id_atividade
                ), JSON_ARRAY())
            )
        )
        FROM DataAtividade AS da
        WHERE a.id_atividade = da.id_atividade
    ), JSON_ARRAY()) AS datas
FROM Atividade AS a
LEFT JOIN PrecAtividade AS pa ON pa.id_atividade = a.id_atividade
LEFT JOIN Usuario AS p ON p.id_usuario = pa.id_usuario
LEFT JOIN LocalAtividade AS la ON la.id_atividade=a.id_atividade
LEFT JOIN Local AS l ON l.id_local=la.id_local
GROUP BY a.id_atividade;

CREATE VIEW view_grupo AS
SELECT g.id_grupo, g.nome AS nome_grupo,
	COALESCE((SELECT JSON_ARRAYAGG(
				JSON_OBJECT(
				  'nome', al.nome,
				  'id_usuario', al.id_usuario,
                  'matricula', al.login
				) 
			) FROM AlunoGrupo AS ag 
            LEFT JOIN Usuario AS al ON al.id_usuario=ag.id_usuario
            WHERE ag.id_grupo=g.id_grupo
	), JSON_ARRAY()) AS alunos,
    COALESCE((SELECT JSON_ARRAYAGG(
		JSON_OBJECT(
					'nome', e.nome,
                    'id_estagio', e.id_estagio,
                    'id_usuario', c.id_usuario,
                    'nome_coordenador', c.nome,
                    'data_inicial', eg.data_inicial,
                    'data_final', eg.data_final
				)
			) FROM Estagio AS e 
            INNER JOIN EstagioGrupo AS eg ON eg.id_estagio=e.id_estagio 
            INNER JOIN CoordEstagio AS ce ON ce.id_estagio=e.id_estagio
            INNER JOIN Usuario AS c ON c.id_usuario=ce.id_usuario
            WHERE eg.id_grupo = g.id_grupo
		), JSON_ARRAY()) AS estagios
FROM Grupo AS g
GROUP BY g.id_grupo ORDER BY g.id_grupo ASC;


CREATE VIEW view_estagio AS SELECT e.id_estagio, e.nome AS nome_estagio, c.nome AS nome_coordenador,
COALESCE((SELECT JSON_ARRAYAGG(
			JSON_OBJECT(
				'nome', g.nome,
                'id_grupo', g.id_grupo,
                'data_inicial', eg.data_inicial,
                'data_final', eg.data_final,
                'id_estagiogrupo', eg.id_estagiogrupo,
                'alunos', COALESCE((SELECT JSON_ARRAYAGG(
									JSON_OBJECT(
                                    'nome', al.nome,
                                    'id_usuario', al.id_usuario,
                                    'matricula', al.login
                                    )) FROM AlunoGrupo AS ag 
                                    LEFT JOIN Usuario AS al ON al.id_usuario=ag.id_usuario 
                                    WHERE ag.id_grupo = g.id_grupo 
                                    ), JSON_ARRAY())
))
	FROM EstagioGrupo AS eg
        LEFT JOIN Grupo AS g ON g.id_grupo=eg.id_grupo
        WHERE eg.id_estagio=e.id_estagio
), JSON_ARRAY()) AS grupos,
COALESCE((SELECT JSON_ARRAYAGG(
					JSON_OBJECT(
                    'id_atividade', va.id_atividade,
                    'nome_atividade', va.nome_atividade,
                    'id_estagio', va.id_estagio,
                    'hora_final', va.hora_final,
                    'hora_inicial', va.hora_inicial,
                    'intervalo_alunos', va.intervalo_alunos,
                    'alunos_no_dia', va.alunos_no_dia,
                    'nome_preceptor', va.nome_preceptor,
                    'nome_local', va.nome_local,
                    'segunda', va.segunda,
                    'terca', va.terca,
                    'quarta', va.quarta,
                    'quinta', va.quinta,
                    'sexta', va.sexta,
                    'sabado', va.sabado,
                    'domingo', va.domingo,
                    'datas', va.datas
						)) FROM view_atividade AS va 
                        WHERE va.id_estagio=e.id_estagio), JSON_ARRAY()) AS atividades
FROM Estagio AS e 
LEFT JOIN CoordEstagio AS ce ON ce.id_estagio=e.id_estagio
LEFT JOIN Usuario AS c ON c.id_usuario = ce.id_usuario
GROUP BY e.id_estagio ORDER BY e.nome;

CREATE VIEW view_presenca AS SELECT ada.id_alunodataatividade, da.excluida, ada.data, at.hora_inicial, at.hora_final, lo.nome AS nome_local, lo.coordenadas,
ada.id_usuario, al.nome AS nome_aluno, p.nome AS nome_preceptor, al.login, at.nome, ada.id_atividade, ada.estado FROM AlunoDataAtividade AS ada
LEFT JOIN Usuario AS al ON al.id_usuario = ada.id_usuario
LEFT JOIN Atividade AS at ON at.id_atividade = ada.id_atividade
LEFT JOIN PrecAtividade AS pa ON pa.id_atividade = at.id_atividade
LEFT JOIN Usuario AS p ON p.id_usuario = pa.id_usuario
LEFT JOIN DataAtividade AS da ON da.data = ada.data AND da.id_atividade = at.id_atividade
LEFT JOIN LocalAtividade AS la ON la.id_atividade = at.id_atividade
LEFT JOIN Local AS lo ON lo.id_local = la.id_local
GROUP BY ada.id_alunodataatividade ORDER BY ada.data ASC;