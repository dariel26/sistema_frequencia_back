CREATE TABLE Coordenador (
nome TEXT,
senha TEXT,
estado BOOLEAN,
papel TEXT,
email VARCHAR(100) UNIQUE,
id_coordenador INT PRIMARY KEY AUTO_INCREMENT
);

CREATE TABLE Grupo (
id_grupo BIGINT PRIMARY KEY AUTO_INCREMENT,
nome VARCHAR(200) UNIQUE
);

CREATE TABLE Aluno (
senha TEXT,
nome TEXT,
estado BOOLEAN,
aparelho TEXT,
papel TEXT,
matricula VARCHAR(20) UNIQUE,
id_aluno BIGINT PRIMARY KEY auto_increment,
id_grupo BIGINT,
FOREIGN KEY(id_grupo) REFERENCES Grupo (id_grupo)
);

CREATE TABLE Preceptor (
nome TEXT,
email VARCHAR(100) UNIQUE,
estado BOOLEAN,
papel TEXT,
id_preceptor INT PRIMARY KEY AUTO_INCREMENT,
senha TEXT
);

CREATE TABLE Estagio (
id_estagio INT PRIMARY KEY AUTO_INCREMENT,
nome VARCHAR(200) UNIQUE
);

CREATE TABLE Local (
id_local INT PRIMARY KEY AUTO_INCREMENT,
nome VARCHAR(200) UNIQUE,
coordenadas JSON
);

CREATE TABLE CoordEstagio (
id_coordenador INT,
id_estagio INT UNIQUE,
FOREIGN KEY(id_coordenador) REFERENCES Coordenador (id_coordenador) ON DELETE CASCADE,
FOREIGN KEY(id_estagio) REFERENCES Estagio (id_estagio) ON DELETE CASCADE
);

CREATE TABLE EstagioGrupo (
data_inicial DATE,
data_final DATE,
id_estagiogrupo INT PRIMARY KEY auto_increment,
id_grupo BIGINT NULL,
id_estagio INT,
FOREIGN KEY(id_grupo) REFERENCES Grupo (id_grupo) ON DELETE CASCADE,
FOREIGN KEY(id_estagio) REFERENCES Estagio (id_estagio) ON DELETE CASCADE,
UNIQUE(id_estagio, id_grupo),
UNIQUE(id_estagio, data_inicial),
UNIQUE(id_estagio, data_final)
);

CREATE TABLE Atividade(
id_atividade BIGINT PRIMARY KEY AUTO_INCREMENT,
id_estagio INT,
nome TEXT,
hora_inicial TEXT,
hora_final TEXT,
intervalo_alunos TEXT,
alunos_no_dia INT,
segunda BOOLEAN,
terca BOOLEAN,
quarta BOOLEAN,
quinta BOOLEAN,
sexta BOOLEAN,
sabado BOOLEAN,
domingo BOOLEAN,
FOREIGN KEY(id_estagio) REFERENCES Estagio (id_estagio) ON DELETE CASCADE
);

CREATE TABLE PrecAtividade (
id_preceptor INT,
id_atividade BIGINT UNIQUE,
FOREIGN KEY(id_preceptor) REFERENCES Preceptor (id_preceptor) ON DELETE CASCADE,
FOREIGN KEY(id_atividade) REFERENCES Atividade (id_atividade) ON DELETE CASCADE
);

CREATE TABLE LocalAtividade (
id_local INT,
id_atividade BIGINT UNIQUE,
FOREIGN KEY(id_local) REFERENCES Local (id_local) ON DELETE CASCADE,
FOREIGN KEY(id_atividade) REFERENCES Atividade (id_atividade) ON DELETE CASCADE
);

CREATE TABLE DataAtividade (
id_dataatividade BIGINT PRIMARY KEY AUTO_INCREMENT,
id_atividade BIGINT,
data DATE,
excluida BOOLEAN,
FOREIGN KEY(id_atividade) REFERENCES Atividade (id_atividade) ON DELETE CASCADE,
UNIQUE(id_atividade, data)
);

CREATE TABLE AlunoDataAtividade (
id_alunodataatividade BIGINT PRIMARY KEY AUTO_INCREMENT,
data DATE,
id_aluno BIGINT,
id_atividade BIGINT,
estado TEXT,
FOREIGN KEY(id_aluno) REFERENCES Aluno (id_aluno) ON DELETE CASCADE,
FOREIGN KEY(id_atividade) REFERENCES Atividade (id_atividade) ON DELETE CASCADE
);

CREATE TABLE Presenca(
id_presenca BIGINT PRIMARY KEY AUTO_INCREMENT,
id_aluno BIGINT,
id_dataatividade BIGINT,
id_atividade BIGINT,
hora_marcada TEXT,
id_local INT,
data DATE,
estado TEXT,
coordenadas JSON,
FOREIGN KEY(id_aluno) REFERENCES Aluno (id_aluno) ON DELETE CASCADE,
FOREIGN KEY(id_dataatividade) REFERENCES DataAtividade (id_dataatividade) ON DELETE CASCADE,
FOREIGN KEY(id_atividade) REFERENCES Atividade (id_atividade) ON DELETE CASCADE,
FOREIGN KEY(id_local) REFERENCES Local (id_local) ON DELETE CASCADE,
UNIQUE(id_aluno, id_atividade, id_local, data)
);

CREATE TABLE jwt (
    id_token BIGINT PRIMARY KEY AUTO_INCREMENT,
    token text,
    validade DATETIME
);

CREATE VIEW view_usuario AS
SELECT a.matricula AS login, a.senha, a.papel, a.nome, a.estado, a.id_aluno AS id
FROM Aluno a UNION ALL SELECT c.email AS login, c.senha, c.papel, c.nome, c.estado, c.id_coordenador AS id
FROM Coordenador c UNION ALL SELECT p.email AS login, p.senha, p.papel, p.nome, p.estado, p.id_preceptor AS id
FROM Preceptor p;


CREATE VIEW view_aluno AS SELECT
    al.id_aluno,
    al.nome,
    al.papel,
    al.matricula,
    g.id_grupo,
    g.nome AS nome_grupo,
    COALESCE((SELECT JSON_ARRAYAGG(
            JSON_OBJECT(
                'nome_estagio', e.nome,
                'data_inicial', eg.data_inicial,
                'data_final', eg.data_final
            )
        )
        FROM EstagioGrupo AS eg
        LEFT JOIN Estagio AS e ON e.id_estagio = eg.id_estagio
        WHERE eg.id_grupo = g.id_grupo), JSON_ARRAY()
    ) AS estagios,
    COALESCE((SELECT JSON_ARRAYAGG(
            JSON_OBJECT(
                'id_atividade', at.id_atividade,
                'nome_atividade', at.nome,
                'hora_inicial', at.hora_inicial,
                'hora_final', at.hora_final,
                'data', ada.data,
                'estado', ada.estado,
                'id_alunodataatividade', ada.id_alunodataatividade
            )
        )
        FROM AlunoDataAtividade AS ada
        LEFT JOIN Atividade AS at ON at.id_atividade = ada.id_atividade
        WHERE ada.id_aluno = al.id_aluno
    ), JSON_ARRAY()) AS datas
FROM Aluno AS al
LEFT JOIN Grupo AS g ON g.id_grupo = al.id_grupo
GROUP BY al.id_aluno;

CREATE VIEW view_atividade AS SELECT
    a.id_atividade,
    a.nome AS nome_atividade,
    a.id_estagio,
    a.hora_inicial,
    a.hora_final,
    a.intervalo_alunos,
    a.alunos_no_dia,
    p.nome AS nome_preceptor,
    l.nome AS nome_local,
    a.segunda,
    a.terca,
    a.quarta,
    a.quinta,
    a.sexta, 
    a.sabado,
    a.domingo,
    COALESCE((
        SELECT JSON_ARRAYAGG(
            JSON_OBJECT(
                'data', da.data,
                'excluida', da.excluida,
                'id_dataatividade', da.id_dataatividade,
                'alunos', COALESCE((
                    SELECT JSON_ARRAYAGG(
						JSON_OBJECT(
							'nome', al.nome,
							'id_aluno', al.id_aluno,
                            'estado', ada.estado
						)
                    )
                    FROM AlunoDataAtividade AS ada 
                    LEFT JOIN Aluno AS al ON al.id_aluno = ada.id_aluno
                    WHERE ada.data = da.data AND ada.id_atividade = a.id_atividade
                ), JSON_ARRAY())
            )
        )
        FROM DataAtividade AS da
        WHERE a.id_atividade = da.id_atividade
    ), JSON_ARRAY()) AS datas
FROM Atividade AS a
LEFT JOIN PrecAtividade AS pa ON pa.id_atividade = a.id_atividade
LEFT JOIN Preceptor AS p ON p.id_preceptor = pa.id_preceptor
LEFT JOIN LocalAtividade AS la ON la.id_atividade=a.id_atividade
LEFT JOIN Local AS l ON l.id_local=la.id_local
GROUP BY a.id_atividade;

CREATE VIEW view_grupo AS
SELECT g.id_grupo, g.nome AS nome_grupo,
	COALESCE((SELECT JSON_ARRAYAGG(
				JSON_OBJECT(
				  'nome', al.nome,
				  'id_aluno', al.id_aluno,
                  'matricula', al.matricula
				) 
			) FROM Aluno AS al WHERE al.id_grupo=g.id_grupo ORDER BY al.id_aluno ASC
	), JSON_ARRAY()) AS alunos,
    COALESCE((SELECT JSON_ARRAYAGG(
		JSON_OBJECT(
					'nome', e.nome,
                    'id_estagio', e.id_estagio,
                    'id_coordenador', c.id_coordenador,
                    'nome_coordenador', c.nome,
                    'data_inicial', eg.data_inicial,
                    'data_final', eg.data_final
				)
			) FROM Estagio AS e 
            INNER JOIN EstagioGrupo AS eg ON eg.id_estagio=e.id_estagio 
            INNER JOIN CoordEstagio AS ce ON ce.id_estagio=e.id_estagio
            INNER JOIN Coordenador AS c ON c.id_coordenador=ce.id_coordenador
            WHERE eg.id_grupo = g.id_grupo
		), JSON_ARRAY()) AS estagios
FROM Grupo AS g
GROUP BY g.id_grupo ORDER BY g.id_grupo ASC;


CREATE VIEW view_estagio AS SELECT e.id_estagio, e.nome AS nome_estagio, c.nome AS nome_coordenador,
COALESCE((SELECT JSON_ARRAYAGG(
			JSON_OBJECT(
				'nome', g.nome,
                'id_grupo', g.id_grupo,
                'data_inicial', eg.data_inicial,
                'data_final', eg.data_final,
                'id_estagiogrupo', eg.id_estagiogrupo,
                'alunos', COALESCE((SELECT JSON_ARRAYAGG(
									JSON_OBJECT(
                                    'nome', al.nome,
                                    'id_aluno', al.id_aluno,
                                    'matricula', al.matricula
                                    )) FROM Aluno AS al WHERE al.id_grupo=g.id_grupo ORDER BY al.nome ASC), JSON_ARRAY())
))
	FROM EstagioGrupo AS eg
        LEFT JOIN Grupo AS g ON g.id_grupo=eg.id_grupo
        WHERE eg.id_estagio=e.id_estagio
), JSON_ARRAY()) AS grupos,
COALESCE((SELECT JSON_ARRAYAGG(
					JSON_OBJECT(
                    'id_atividade', va.id_atividade,
                    'nome_atividade', va.nome_atividade,
                    'id_estagio', va.id_estagio,
                    'hora_final', va.hora_final,
                    'hora_inicial', va.hora_inicial,
                    'intervalo_alunos', va.intervalo_alunos,
                    'alunos_no_dia', va.alunos_no_dia,
                    'nome_preceptor', va.nome_preceptor,
                    'nome_local', va.nome_local,
                    'segunda', va.segunda,
                    'terca', va.terca,
                    'quarta', va.quarta,
                    'quinta', va.quinta,
                    'sexta', va.sexta,
                    'sabado', va.sabado,
                    'domingo', va.domingo,
                    'datas', va.datas
						)) FROM view_atividade AS va 
                        WHERE va.id_estagio=e.id_estagio), JSON_ARRAY()) AS atividades
FROM Estagio AS e 
LEFT JOIN CoordEstagio AS ce ON ce.id_estagio=e.id_estagio
LEFT JOIN Coordenador AS c ON c.id_coordenador=ce.id_coordenador
GROUP BY e.id_estagio ORDER BY e.nome;

CREATE VIEW view_presenca AS SELECT ada.id_alunodataatividade, da.excluida, ada.data, at.hora_inicial, at.hora_final, lo.nome AS nome_local, lo.coordenadas,
ada.id_aluno, al.nome AS nome_aluno, p.nome AS nome_preceptor, al.matricula, at.nome, ada.id_atividade, ada.estado FROM AlunoDataAtividade AS ada
LEFT JOIN Aluno AS al ON al.id_aluno = ada.id_aluno
LEFT JOIN Atividade AS at ON at.id_atividade = ada.id_atividade
LEFT JOIN PrecAtividade AS pa ON pa.id_atividade = at.id_atividade
LEFT JOIN Preceptor AS p ON p.id_preceptor = pa.id_preceptor
LEFT JOIN DataAtividade AS da ON da.data = ada.data AND da.id_atividade = at.id_atividade
LEFT JOIN LocalAtividade AS la ON la.id_atividade = at.id_atividade
LEFT JOIN Local AS lo ON lo.id_local = la.id_local
GROUP BY ada.id_alunodataatividade ORDER BY ada.data ASC;